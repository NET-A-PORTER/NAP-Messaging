{{$NEXT}}

1.6.17    2014-11-13 17:29:55+00:00 Europe/London
 - more uglyness to cater to RPM find-provides

1.6.16    2014-11-11 14:45:22+00:00 Europe/London
 - allow passing an application *object* to NAP::Messaging::Runner, as
   long as it implements the appropriate methods

1.6.15    2014-09-10 14:32:36+01:00 Europe/London
 - set the producer-timestamp header for every message sent, to aid in
   debugging broker problems

1.6.14    2014-07-23 12:47:20+01:00 Europe/London
 - fix subtest name defaulting when destination is not specified

1.6.13    2014-07-17 10:03:51+01:00 Europe/London
 - fix Test::NAP::Messaging w.r.t. newer Plack::Handler::Stomp

1.6.12    2014-07-14 17:22:52+01:00 Europe/London
 - add JSON Schema support to Rx types
 - set the logger for the producer
 - use a sensible subtest name for assert_messages if not provided

1.6.11    2014-05-15 15:55:26+01:00 Europe/London
 - /nap/datetime Data::Rx type did not accept negative offsets, fixed
   (CANDO-7944)

1.6.10    2014-05-08 12:03:35+01:00 Europe/London
 - allow configuring the timing event log levels

1.6.9     2014-02-20 16:56:52 Europe/London
 - allow specifying different servers in the <Stomp> configuration
   section, to consume from a different broker than the one we use to
   send

1.6.8     2014-02-19 11:28:41+00:00 Europe/London
 - POD & dir name fixes for the Nagios plugin

1.6.7     2014-02-17 11:23:09+00:00 Europe/London
 - Refactor NAP::Messaging::MultiRunner
 - Add check_nap_messaging_runner Nagios plugin

1.6.6     2014-01-22 17:49:16 Europe/London
 - always mark inner packages as loaded (via %INC)

1.6.5     2014-01-15 11:05:44 Europe/London
 - /nap/datetime Data::Rx type now (again) accepts
   '2014-01-15T10:55:26.000+0000' as a valid date-time value

1.6.4     2014-01-13 15:11:08 Europe/London
 - removed deprecated Class::Load::load_class, using
   Module::Runtime::require_module

1.6.3     2013-12-10 13:01:24 Europe/London
 - NAP::Messaging::Role::Producer can now map to multiple destinations
   and types, just like CatalystX::ConsumesJMS can
 - NAP::Messaging::Timing now takes hashes
 - NAP::Messaging::Role::ConsumesJMS logs message details in timing as
   key=value pairs, and it also sets them as MDC

1.6.2     2013-10-17 09:54:21 Europe/London
 - now compatible with both Data::Rx 0.007 patched, and Data::Rx 0.2
   official; see NAP::Messaging::DataRx::Compat for details

1.6.1     2013-09-16 17:48:27 Europe/London
 - don't log "stopping children" if there are no children to stop
 - ignore leading slashes in destinations for the ::Partitioned
   multi-runner
 - log (in category "timing") start/stop of message processing
 - expose the timing logger via $ctx->timing_log
 - provide simple timing facility via NAP::Messaging::Timing and
   NAP::Messaging::Role::WithTiming
 - log the name of the child after forking
 - don't pretend we're free software

1.6.0     2013-07-18 15:23:17 Europe/London
 - document NAP::Messaging::Catalyst::LogTrapper
 - NAP::Messaging::MultiRunner, to start and supervise multiple
   identical consumer processes
 - NAP::Messaging::MultiRunner::Partitioned, to have sets of children
   only consume from a subset of subscribed destinations

1.5.6     2013-04-04 14:30:53 Europe/London
 - Test::NAP::Messaging::Helpers::add_random_fields now works in scalar
   context
 - NAP::Messaging::Runner allows using custom handler classes and
   traits; this is useful to apply Net::Stomp::MooseHelpers::TraceStomp
   for debugging

1.5.5     2013-03-01 16:28:39 Europe/London
 - NAP::Messaging::Utils::ignore_extra_fields{,_deep} to map a strict
   Data::Rx schema into one that ignores unknown fields
 - Test::NAP::Messaging::request_with_extra_fields and
   Test::NAP::Messaging::Helpers::add_random_fields to test the above
   behaviour

1.5.4     2013-01-08 16:18:44 Europe/London
 - assert_messages returns a boolean indicating whether the test passed
 - Test::NAP::Messaging::Helpers exports the 'atleast' comparator

1.5.3     2012-11-22 14:29:25 Europe/London
 - expose tranform via Test::NAP::Messaging
 - untyped messages are now sent to the DLQ with type="error-unknown"

1.5.2     2012-10-24 15:50:59 Europe/London
 - assert_messages without a destination ("search everywhere") is now
   compatible with newer Net::Stomp::MooseHelpers

1.5.1     2012-10-18 13:16:20 Europe/London
 - warning when setting JMSType in a "transform" method
 - the "destination" attribute for transformers is no longer required,
   as long as they set some value in the "destination" header
 - transformers get their configuration passed in to the constructor,
   making things more uniform and simpler

1.5.0     2012-10-05 17:11:55 Europe/London
 - producer validation used to compile the specs at role-application
   time, now it waits until first use; this helps in a few cases where
   you need an instance to generate the full spec
 - added NAP::Messaging::Utils, currently only has 1 function,
   object_message

1.4.1     2012-10-18 13:05:54 Europe/London
 - allow a Producer to not have @type set automatically

1.4.0     2012-09-12 16:27:46 Europe/London
 - add producer validation
 - serialisation is now completely handled inside NAP::Messaging::Serialiser
 - clearer log when receiving an unhandled message
 - documentation diagrams in the docs/ subdir, and ::Migration pod

1.3.0     2012-08-17 16:40:37 Europe/London
 - failure handling is factored better, easier to change from
   ::Consumer subclasses
 - new role to get to Catalyst's ->model method
 - ::Consumer components are loaded automatically (previously you had
   to configure your Catalyst to do it)
 - destination mapping in producers / transformers is exposed via
   methods, in case you need it (e.g. for JMSReplyTo header)
 - Test::NAP::Messaging now has a config_hash parameter, to pass an
   application's config and get the right producer configuration

1.2.0     2012-08-02 15:40:51 Europe/London
 - NAP::Messaging::Role::Producer has a preprocessor, by default it
   stringifies DateTime objects
 - test helpers, Test::Deep-style: napdate($datetime) and atleast($number)

1.1.0     2012-07-30 10:59:58 Europe/London
 - added LogTrapper, to tie STD{OUT,ERR} through the logger (defaults
   to disabled)
 - unhandled messages (of unknown types, or delivered outside our
   subscriptions) are sent to the proper DLQ, instead of ignored

1.0.0     2012-07-17 11:34:14 Europe/London
 - initial release, extracted from NAP-DocIntegrator
